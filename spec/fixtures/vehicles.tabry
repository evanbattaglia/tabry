# Silly example to test various things
# Compile with:
# treesitter/tabry-compile.js spec/fixtures/vehicles.tabry > spec/fixtures/vehicles.yaml

cmd vehicles
desc "Build and control vehicles"

flag verbose,v "Give more details in output"

sub build {
  varargs vehicle-types @vehicle-type-arg
}

sub list-vehicles

sub move {
  sub go,g @vehicle-type-arg
  sub stop,s @vehicle-type-arg
  sub crash @vehicle-type-arg {
    opt arg crash-into-vehicle @vehicle-type-arg {
      desc "Crash into another vehicle, default is to crash into a fire hydrant"
    }
    flagarg speed {
      # ^ could be done with opts const, but this is just to test opts shell
      opts shell "echo fast && echo slow"
    }
    flag dry-run "Don't actually crash, just simulate it"
    flagarg output-to-file,f {
      opts file
      opts const "-"
    }
    flagarg output-to-directory,dir,d { opts dir }
  }
  sub freeway-crash,pileup,p @vehicle-type-arg {
    desc "Crash on the freeway (AKA a 'pile up')"
    opt varargs crash-into-vehicles @vehicle-type-arg {
      title "vehicle to crash into"
      desc "List of vehicles to crash into. Optional, leave out for a '1 car pileup' -- just crashing into center divider"
    }
  }
}

sub sub-with-sub-or-arg {
  arg { opts const (x y z) }
  sub subsub
}

sub sub-with-mandatory-flag {
  opt arg { opts const (a b c) }
  reqd flagarg mandatory
  flagarg verbose,v # to test overriding a flag
}

defargs @vehicle-type-arg {
  arg vehicle-type @vehicle-type
}

defopts @vehicle-type {
  opts const (car bike)
}
