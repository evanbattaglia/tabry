# frozen_string_literal: true

# Used to generate a tab-completion function for a Tabry CLI using absolute
# paths to the tabry-bash script in this repo and to the Tabry JSON/YML file.
# Using uniquely-named tab-completion functions and absolute paths means you can
# have different Tabry-based CLIs using different versions of Tabry without any
# conflicts.
# See sh/bash/README.md and "Adding Tab Completion to your CLI" in main README

module Tabry
  module Shells
    module Bash
      # NOTE! This code uses sh/bash/tabry_bash_core.sh and is described in
      # sh/bash/README.md; see that README for more info
      def self.generate(cmd_name, tabry_file_path)
        capitalized_cmd_name = cmd_name.upcase.gsub(/[^a-zA-Z0-9_]/, "_")
        tabry_file = Shellwords.escape(File.expand_path(tabry_file_path))
        path_to_tabry = Shellwords.escape(File.expand_path("#{__dir__}/../../../"))

        core = File.read("#{__dir__}/../../../sh/bash/tabry_bash_core.sh")
        core.gsub! "_tabry_completions_internal()", "_tabry_#{capitalized_cmd_name}_completions_internal()"

        <<~END_BASH_CODE_TEMPLATE + core
          # The following Autocomplete is for a Tabry-powered command. It was
          # generated by the command itself. See the documentation located in
          # #{path_to_tabry}/sh/bash/README.md
          _tabry_#{capitalized_cmd_name}_completions() {
            TABRY_IMPORTS_PATH=#{tabry_file} _tabry_#{capitalized_cmd_name}_completions_internal #{path_to_tabry}/bin/tabry-bash
          }
          complete -F _tabry_#{capitalized_cmd_name}_completions #{Shellwords.escape cmd_name}
        END_BASH_CODE_TEMPLATE
      end
    end
  end
end
